AWSTemplateFormatVersion: '2010-09-09'
Description: Pipeline Stack


Parameters:

  RepoName:
    Default: ''
    Description: Name of the application repo
    Type: String

  Realm:
    Description: Name of the realm or client preferred name. Used to identify multiple instances of the app in the same account
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]*$

  GitHubOwner:
    Type: String

  Branch:
    Default: master
    Description: The default branch to use for triggering the pipeline
    Type: String

  ProjectName:
    Default: GreenCRN
    Type: String

  DomainName:
    Type: String

  CertificateId:
    Type: String

Resources:

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
              - ssm.amazonaws.com
              - codebuild.amazonaws.com
              - lambda.amazonaws.com
              - s3.amazonaws.com
              - cloudformation.amazonaws.com
              - codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  S3BuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${Realm}-${RepoName}-artifacts-${AWS::AccountId}'

  AssetsBucketPolicy: # IMPORTANT - Do not change this resource name
    DependsOn:
      - S3BuildsBucket
      - CodePipelineRole
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Sub '${Realm}-${RepoName}-artifacts-${AWS::AccountId}'
      PolicyDocument:
        Statement:
          - Action:
              - 's3:*'
            Effect: 'Allow'
            Resource:
              - !Sub 'arn:aws:s3:::${S3BuildsBucket}'
              - !Sub 'arn:aws:s3:::${S3BuildsBucket}/*'
            Principal:
              AWS: !GetAtt 'CodePipelineRole.Arn'
          - Action:
              - 's3:*'
            Effect: 'Allow'
            Resource:
              - !Sub 'arn:aws:s3:::${S3BuildsBucket}'
              - !Sub 'arn:aws:s3:::${S3BuildsBucket}/*'
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'

  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${Realm}-pipeline'
      RoleArn: !GetAtt 'CodePipelineRole.Arn'
      Stages:
        - Name: Sources
          Actions:
            - Name: !Ref ProjectName
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RepoName
                Branch: !Ref Branch
                OAuthToken: !Sub '{{resolve:secretsmanager:${ProjectName}/GitHub:SecretString:github}}'
                PollForSourceChanges: false
              RunOrder: 1

        - Name: ExtractSources
          Actions:
            - Name: !Sub 'Extract${ProjectName}'
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                ObjectKey: !Sub '${RepoName}_source'
                Extract: 'true'
                BucketName: !Sub '${Realm}-${RepoName}-artifacts-${AWS::AccountId}'
              RunOrder: 1

        - Name: CodePipeline
          Actions:
            - Name: !Sub '${ProjectName}Pipeline'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                RoleArn: !GetAtt 'CodePipelineRole.Arn'
                StackName: !Ref AWS::StackName
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                OutputFileName: pipeline_outputs.json
                TemplatePath: SourceOutput::aws/pipeline.yml
                ParameterOverrides: !Sub |
                  {
                    "RepoName": "${RepoName}",
                    "Realm": "${Realm}",
                    "GitHubOwner": "${GitHubOwner}",
                    "Branch": "${Branch}",
                    "ProjectName": "${ProjectName}",
                    "DomainName": "${DomainName}",
                    "CertificateId": "${CertificateId}"
                  }
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: PipelineArtifacts
              RunOrder: 1

        - Name: Resources
          Actions:
            - Name: VPC
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                RoleArn: !GetAtt 'CodePipelineRole.Arn'
                StackName: !Sub '${AWS::StackName}Vpc'
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                OutputFileName: vpc_outputs.json
                ParameterOverrides: !Sub |
                  {
                    "Realm": "${Realm}"
                  }
                TemplatePath: SourceOutput::aws/vpc.yml
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: VpcArtifacts
              RunOrder: 1
            - Name: ImageRepo
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                RoleArn: !GetAtt 'CodePipelineRole.Arn'
                StackName: !Sub '${AWS::StackName}ImageRepo'
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                OutputFileName: ecr_outputs.json
                ParameterOverrides: !Sub |
                  {
                    "Realm": "${Realm}"
                  }
                TemplatePath: SourceOutput::aws/ecr.yml
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: EcrArtifacts
              RunOrder: 1
            - Name: Database
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                RoleArn: !GetAtt 'CodePipelineRole.Arn'
                StackName: !Sub '${AWS::StackName}Database'
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                OutputFileName: database_outputs.json
                ParameterOverrides: !Sub |
                  {
                    "Realm": "${Realm}",
                    "ProjectName": "${ProjectName}"
                  }
                TemplatePath: SourceOutput::aws/database.yml
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: DatabaseArtifacts
              RunOrder: 2
            - Name: StaticSiteBucket
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                RoleArn: !GetAtt 'CodePipelineRole.Arn'
                StackName: !Sub '${AWS::StackName}StaticSiteBucket'
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                OutputFileName: static_site_bucket_outputs.json
                ParameterOverrides: !Sub |
                  {
                    "Realm": "${Realm}",
                    "DomainName": "${DomainName}"
                  }
                TemplatePath: SourceOutput::aws/s3.yml
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: StaticSiteArtifacts
              RunOrder: 2

            - Name: CodeBuildResource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                RoleArn: !GetAtt 'CodePipelineRole.Arn'
                StackName: !Sub '${AWS::StackName}AppCodeBuild'
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                OutputFileName: codebuild_outputs.json
                ParameterOverrides: !Sub |
                  {
                    "RepoName": "${RepoName}",
                    "Realm": "${Realm}",
                    "GitHubOwner": "${GitHubOwner}",
                    "Branch": "${Branch}",
                    "ProjectName": "${ProjectName}",
                    "DomainName": "${DomainName}",
                    "S3BuildsBucket": "${S3BuildsBucket}",
                    "CodePipelineRole": "${CodePipelineRole.Arn}"
                  }
                TemplatePath: SourceOutput::aws/codebuild.yml
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: CodebuildArtifacts
              RunOrder: 3

        - Name: BuildApp
          Actions:
            - InputArtifacts:
                - Name: SourceOutput
              Name: AppBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              OutputArtifacts:
                - Name: BuildAppArtifacts
              RoleArn: !GetAtt 'CodePipelineRole.Arn'
              Configuration:
                ProjectName: !Sub '${Realm}-${RepoName}-codebuild'
              RunOrder: 1

            - Name: Api
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                RoleArn: !GetAtt 'CodePipelineRole.Arn'
                StackName: !Sub '${AWS::StackName}Api'
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                OutputFileName: api_outputs.json
                ParameterOverrides: !Sub |
                  {
                    "Realm": "${Realm}",
                    "DomainName": "${DomainName}",
                    "ProjectName": "${ProjectName}",
                    "CertificateId": "${CertificateId}"
                  }
                TemplatePath: SourceOutput::aws/fargate.yml
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: ApiArtifacts
              RunOrder: 2

            - Name: CDN
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                RoleArn: !GetAtt 'CodePipelineRole.Arn'
                StackName: !Sub '${AWS::StackName}CloudFrontDistribution'
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                OutputFileName: cloudfront_distribution_outputs.json
                ParameterOverrides: !Sub |
                  {
                    "Realm": "${Realm}",
                    "DomainName": "${DomainName}",
                    "CertificateId": "${CertificateId}"
                  }
                TemplatePath: SourceOutput::aws/cloudfront.yml
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: CloudFrontArtifacts
              RunOrder: 3

      ArtifactStore:
        Type: S3
        Location: !Ref S3BuildsBucket

  GitHubPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub '{{resolve:secretsmanager:${ProjectName}/Webhook:SecretString:github}}'
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref AppPipeline
      TargetAction: !Ref ProjectName
      Name: AppPipelineWebhook
      TargetPipelineVersion: !GetAtt AppPipeline.Version
      RegisterWithThirdParty: true


Outputs:
  S3BuildsBucket:
    Value: !Ref S3BuildsBucket
    Export:
      Name: !Sub '${Realm}:S3BuildsBucket'

  CodePipelineRole:
    Value: !GetAtt 'CodePipelineRole.Arn'
    Export:
      Name: !Sub '${Realm}:CodePipelineRole'
