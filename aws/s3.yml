AWSTemplateFormatVersion: '2010-09-09'
Description: Provisions apps static site content


Parameters:

  Realm:
    Description: Name of the realm or client preferred name. Used to identify multiple instances of the app in the same account
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]*$

  DomainName:
    Default: master
    Description: The apps domain
    Type: String

Resources:

  AppStaticSiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${Realm}.${DomainName}'
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  AppStaticSiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AppStaticSiteBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AdPublicReadForGetBucketObjectsdPerm
            Effect: Allow
            Principal: '*'
            Action:
              - 's3:GetObject'
            Resource:
              - !Join ['', [!GetAtt AppStaticSiteBucket.Arn, '/*']]
          - Action:
              - 's3:*'
            Effect: 'Allow'
            Resource:
              - !GetAtt AppStaticSiteBucket.Arn
              - !Join ['', [!GetAtt AppStaticSiteBucket.Arn, '/*']]
            Principal:
              AWS:
                - Fn::ImportValue: !Sub '${Realm}:CodePipelineRole'
          - Action:
              - 's3:*'
            Effect: 'Allow'
            Resource:
              - !GetAtt AppStaticSiteBucket.Arn
              - !Join ['', [!GetAtt AppStaticSiteBucket.Arn, '/*']]
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'

  AppAssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${Realm}-assets.${DomainName}'

  AppProgrammaticUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub '${Realm}-user'
      Policies:
        - PolicyName: AccessAssetsBucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 's3:*'
                Resource:
                  - !GetAtt AppAssetsBucket.Arn
                  - !Join ['', [!GetAtt AppAssetsBucket.Arn, '/*']]
        - PolicyName: AccessToCloudWatch
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogStreams'
                Resource: '*'

  AppUserAccessKeys:
    DependsOn:
      - AppProgrammaticUser
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref AppProgrammaticUser

  AppAssetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AppAssetsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:*'
            Effect: 'Allow'
            Resource:
              - !GetAtt AppAssetsBucket.Arn
              - !Join ['', [!GetAtt AppAssetsBucket.Arn, '/*']]
            Principal:
              AWS:
                - Fn::ImportValue: !Sub '${Realm}:CodePipelineRole'
          - Action:
              - 's3:*'
            Effect: 'Allow'
            Resource:
              - !GetAtt AppAssetsBucket.Arn
              - !Join ['', [!GetAtt AppAssetsBucket.Arn, '/*']]
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
          - Action:
              - 's3:*'
            Effect: 'Allow'
            Resource:
              - !GetAtt AppAssetsBucket.Arn
              - !Join ['', [!GetAtt AppAssetsBucket.Arn, '/*']]
            Principal:
              AWS: !GetAtt 'AppProgrammaticUser.Arn'

Outputs:
  AppStaticSiteBucket:
    Value: !Ref AppStaticSiteBucket
    Export:
      Name: !Sub '${Realm}:AppStaticSiteBucket'

  AppAssetsBucket:
    Value: !Ref AppStaticSiteBucket
    Export:
      Name: !Sub '${Realm}:AppAssetsBucket'

  AccessKeyId:
    Value: !Ref AppUserAccessKeys
    Export:
      Name: !Sub '${Realm}:AccessKeyId'

  SecretAccessKey:
    Value: !GetAtt 'AppUserAccessKeys.SecretAccessKey'
    Export:
      Name: !Sub '${Realm}:SecretAccessKey'
