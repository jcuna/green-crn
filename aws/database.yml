AWSTemplateFormatVersion: '2010-09-09'
Description: Database Stack


Parameters:

  Realm:
    Description: Name of the realm or client preferred name. Used to identify multiple instances of the app in the same account
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]*$

  ProjectName:
    Default: GreenCRN
    Type: String

  DbInstanceType:
    Default: db.t3.medium
    Type: String
    AllowedValues: [db.t3.medium, db.t3.large, db.t3.xlarge, db.m5.large, db.m5.xlarge]

Resources:

  DBRandomPassword:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${ProjectName}/Password/${Realm}'
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${Realm}_user"}'
        GenerateStringKey: 'password'
        ExcludePunctuation: true

  DatabaseCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Port: 5432
      MasterUsername: !Sub '{{resolve:secretsmanager:${DBRandomPassword}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DBRandomPassword}:SecretString:password}}'
      DatabaseName: !Sub '${Realm}${ProjectName}DB'
      DBClusterIdentifier: !Sub ${Realm}-postgresql-cluster
      Engine: aurora-postgresql
      EngineVersion: '11.6'
      DBClusterParameterGroupName: default.aurora-postgresql11
      BackupRetentionPeriod: 15
      PreferredBackupWindow: 02:00-03:00
      PreferredMaintenanceWindow: mon:03:00-mon:04:00
      SourceRegion: !Ref 'AWS::Region'
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      EnableCloudwatchLogsExports:
        - postgresql
      VpcSecurityGroupIds:
        - !Ref DBSecurityGroup

  RDSDBInstance1:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: aurora-postgresql-instance1
      Engine: aurora-postgresql
      DBClusterIdentifier: !Ref DatabaseCluster
      PubliclyAccessible: 'true'
      DBInstanceClass: !Ref DbInstanceType

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub '${Realm}-db-subnet'
      DBSubnetGroupDescription: All subnets avalible to Cluster.
      SubnetIds:
        - Fn::ImportValue: !Sub '${Realm}:PublicSubnet1'
        - Fn::ImportValue: !Sub '${Realm}:PublicSubnet2'

  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      EC2VpcId:
        Fn::ImportValue: !Sub '${Realm}:VPC'
      DBSecurityGroupIngress:
        - EC2SecurityGroupId:
            Fn::ImportValue: !Sub '${Realm}:ContainerSecGroup'
      GroupDescription: "Frontend Access"

Outputs:

  DatabaseEndpoint:
    Value: !Sub '${DatabaseCluster.Endpoint.Address}:${DatabaseCluster.Endpoint.Port}'
    Export:
      Name: !Sub '${Realm}:DatabaseEndpoint'

  DatabasePW:
    Value: !Sub '{{resolve:secretsmanager:${DBRandomPassword}:SecretString:password}}'
    Export:
      Name: !Sub '${Realm}:DatabasePassword'

  DatabaseUser:
    Value: !Sub '{{resolve:secretsmanager:${DBRandomPassword}:SecretString:username}}'
    Export:
      Name: !Sub '${Realm}:DatabaseUsername'
